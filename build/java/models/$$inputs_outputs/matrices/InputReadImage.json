{
  "app": "executor",
  "version": "0.0.1",
  "category": "$$[inputs/outputs].matrices",
  "name": "Input/read image",
  "tags": ["input"],
  "id": "dfb546d3-01dc-4ca2-a9aa-2611ce446585",
  "options": {
    "behavior": {
      "input": true
    }
  },
  "language": "java",
  "java": {
    "class": "net.algart.executors.modules.core.matrices.io.ReadImage",
    "new_instance_method": "getSecureInstance"
  },
  "in_ports": [
    {
      "value_type": "mat",
      "name": "input",
      "caption": "external input",
      "hint": "One of input ports of the chain.\nWhen specified, this function simply returns a copy of this image (other arguments are ignored)."
    },
    {
      "value_type": "scalar",
      "name": "file",
      "caption": "file",
      "hint": "[Optional] String path to the file. If specified, it is used instead of \"File\" parameter (with all replacements performed in that parameter)."
    },
    {
      "value_type": "scalar",
      "name": "file_name_addition",
      "caption": "file name addition",
      "hint": "[Optional] Modification for input file name."
    }
  ],
  "out_ports": [
    {
      "value_type": "mat",
      "name": "output"
    },
    {
      "value_type": "scalar",
      "name": "dim_x"
    },
    {
      "value_type": "scalar",
      "name": "dim_y"
    },
    {
      "value_type": "scalar",
      "name": "absolute_path",
      "caption": "absolute path",
      "hint": "Actual full absolute path to the file"
    },
    {
      "value_type": "scalar",
      "name": "parent_folder",
      "caption": "parent folder",
      "hint": "Absolute path to the parent folder of the file"
    },
    {
      "value_type": "scalar",
      "name": "file_name",
      "caption": "file name",
      "hint": "Actual file name (without folder)"
    }
  ],
  "controls": [
    {
      "caption": "File",
      "name": "file",
      "description": "You can use here relative paths (without starting \"/\" or \"c:\\\"), for example, \"test.jpg\" or \"images/test.jpg\". They will be resolved relative the current folder, containing the executed chain.\nIf this path starts with substring %TEMP%, %TEMP%/ or %TEMP%x. where x is OS-depended file separator character, this substring is replaced with the full path to the system temp directory (System.getProperty(\"java.io.tmpdir\")) with ending file separator. For example, it is correct to write here %TEMP%my_file.jpg, %TEMP%/my_file.jpg or (in Windows) %TEMP%\\my_file.jpg.\nAlso you can use in this string executor system properties \"${path.name.ext}\", \"${path.name}\", \"${file.name.ext}\", \"${file.name}\", \"${resources}\" (chain path/file name with/without extension, resource folder of the platform, containing this function).",
      "value_type": "String",
      "edition_type": "file",
      "default": ""
    },
    {
      "caption": "Requires existing file",
      "name": "fileExistenceRequired",
      "description": "If set, if the file does not exists, this function throws an exception. If cleared and if there is no existing file, output port stays not initialized.\nAll this relates to situation when  \"external input\" is not initialized. If it contains some value, this function returns its copy and ignores this flag.",
      "value_type": "boolean",
      "edition_type": "value",
      "default": true
    }
  ]
}